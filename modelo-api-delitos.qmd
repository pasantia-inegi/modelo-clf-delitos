---
# title: "Capacitación en R y herramientas de productividad"
# author: "Abril 2021"
format:
  # html:
  #   code-fold: true
  revealjs:
    auto-stretch: false
    margin: 0
    slide-number: true
    scrollable: true
    preview-links: auto
    page-layout: custom
    logo: imagenes/logo_portada2.png
    css: ine_quarto_styles.css
    # footer: <https://quarto.org>
engine: knitr
---

#

<!---
# TODO: this does not work
 .linea-superior[]
.linea-inferior[] 
--->

<!---
# TODO: this does not work
 ![](imagenes/logo_portada2.png){.center style="width: 20%;"}   
--->

[]{.linea-superior} 
[]{.linea-inferior} 


<!---
 <img src="imagenes/logo_portada2.png" style="width: 20%"/>  
--->

[<img src="imagenes/logo_portada2.png" width="20%"/> ]{.center-justified}


[**Proyecto Ciencia de Datos**]{.big-par .center-justified}

[**Proyecto: Modelo y API predicción de delitos**]{.big-par .center-justified}

[**Enero 2024**]{.big-par .center-justified}


## Temario

1. [INSERTE JAVI]
2. ¿Qué es una API?
3. API modelo delitos
4. Uso de API en el browser
5. Uso programático de la API


## [PARTE I JAVI]






## ¿Qué es una API?



::: {.incremental}
- Las APIs (_Application Programming Interface_) son piezas de código que permiten que dos aplicaciones o computadoras se comuniquen.

- Se podría decir que la API es un intermediario que permite a que un programa le pida cosas específicas a otro programa, sin necesidad 
de conocer en detalle cómo funciona este otro.


- En la práctica, nos permiten acceder desde un programa en nuestro computador -como Python o R- a los datos de algún servicio, al que de otra manera no tendríamos acceso o bien tendríamos que hacerlo pasando por la página web, lo que implica un proceso más costoso para el usuario y para el proveedor.

- Ejemplos clásicos de APIs son: API de twitter para recolectar tuits, iniciar sesión con Google, API de la CMF para valor UF, monedas extranjeras, IPC, etc.
:::

## ¿Qué es una API? {.medium-par}

:::: {layout-ncol=2}

::: fragment
La analogía del restaurant es práctica para entender la lógica de las API:

- El usuario/a sería el cliente
- La API sería la mesera
- La información que nos puede disponibilizar la API es el menú
- Los servidores con sus bases de datos serían la cocina

:::


::: fragment
Por lo tanto:

- El usuario le pide a la API una información específica (el plato) en base a lo disponible 
en el menú. Luego, los servidores/cocina se encargan de obtener esa información desde las
bases de datos y finalmente la API le entrega el plato/información al usuario, si es que este es
parte del menú.
:::

::::

![](imagenes/api_restaurant.webp){width=60%}


## ¿Qué es una API?

<img src="imagenes/rest-api.jpg" width="100%" style="float: right;" />




## Uso y motivación

:::{.incremental .medium-par}
- Esta API permite abstraer la clasificación de delitos de la programación, facilitando el acceso
a cualquier persona usuaria que pueda seguir el manual de uso.

- La API tiene un objetivo principal y dos secundarios:

  - Permitir, de manera sencilla, la predicción de categorías de delito, en base a los modelos
  _Deep Learning_ que fueron desarrollados.
  - Entregar acceso restringido a los datos de entrenamiento de los modelos.
  - Entregar métricas de calidad de predicción de los modelos.
  

:::

## La API 

:::{.incremental .medium-par}

- La API está compuesta por 3 _endpoints_ principales y  2 _endpoints_ asociados a la autentificación
  - Un _endpoint_ es una ruta dentro de la API que tiene asignada una tarea específica
  
- Estos son:
  - `/predecir`: Se ingresa lista con glosas de delitos a predecir y parámetro `tipo_modelo` que puede tomar valores `modelo_15_clases` o `modelo_16_clasees` y devuelve dos objetos por cada glosa: el primero contiene las probabilidades calculadas asociadas a cada delito, junto con el nombre del delito. El segundo, contiene el nombre del delito que tuvo la probabilidad más alta calculada por el modelo seleccionado. Esta se devuelve en formato `.json`
    - `.json` es una forma estándar y flexible de dar formato y estructura a los datos, facilitando su transmisión

:::


::::: {.r-stack}

:::: {.fragment .fade-in-then-out }

Uso:

:::{layout-ncol=3}

 
  <img src="imagenes/get_data_curl.png" style="width:100%; margin-right:20px;"  />



  <img src="imagenes/get_data_python.png"style="width:100%; margin-right:20px;" />


 
  <img src="imagenes/get_data_r.png"style="width:100%; margin-right:20px;" />



:::
  
::::
   
::: {.fragment .fade-in-then-out}

Resultado:

<img src="imagenes/output_get_data.png" width="65%" />
   

:::




:::::



## La API inedata


::: {.medium-par}
- La API está compuesta por 4 _endpoints_ principales
  - Un _endpoint_ es una ruta dentro de la API que tiene asignada una tarea específica
  
- Estos son:

  - `/colnames`: se le entrega un dataset y una versión y a cambio entrega las columnas de esa tabla.


:::


::: {.fragment}
Uso:

     http://127.0.0.1:8000/colnames?dataset=epf_gastos&version=viii


:::

::: {.fragment}
Resultado:

     {"data":["index","ï»¿ZONA","FOLIO_V","FOLIO","FE","VARSTRAT","VARUNIT","CCIF","D","G","C","SC","P","GASTO","GLOSA"]}


:::
    

## La API inedata


::: {.medium-par}
- La API está compuesta por 4 _endpoints_ principales
  - Un _endpoint_ es una ruta dentro de la API que tiene asignada una tarea específica
  
- Estos son:

  - `/info`: entrega información descriptiva de las tablas disponibles. Opcionalmente se puede ingresar una encuesta para filtrar, obteniendo la información de las tablas asociadas a esa encuesta


:::

::: {.fragment}
Uso:

     http://127.0.0.1:8000/info?dataset_filter=epf_gastos


:::

::: {.fragment}
Resultado:

     "[{\"survey\":\"epf_gastos\",\"version\":\"vii\",\"n_row\":641938,\"n_col\":12,\"file_size\":32763938},{\"survey\":\"epf_gastos\",\"version\":\"viii\",\"n_row\":1064239,\"n_col\":15,\"file_size\":85938002}]"


:::
   

## La API inedata


::: {.medium-par}
- La API está compuesta por 4 _endpoints_ principales
  - Un _endpoint_ es una ruta dentro de la API que tiene asignada una tarea específica
  
- Estos son:

  - `/uploadfile`: permite subir tablas nuevas, que podrán ser consultadas en un futuro.
    - Solo para administradores de la API.
    - Es posible que este _endpoint_ cambie considerablemente.


:::

::: {.fragment}
UI al ingresar al endpoint:

<img src="imagenes/uploadfile.png" style="width:60%; margin-right:20px;" />

:::

## API en acción

Al entrar a la URL, se nos envía directamente a la documentación, que, junto con explicar cada _endpoint_
nos permite probarlos.

Probemos la api!




## Uso programático de la API (Parte II Javi)




## ¿Conclusiones?

:::{.incremental }

- Prepararación para apertura al público (seguridad, conversaciones con SDTI)
- Ampliar el número de productos disponibles
- Incluir datos de series de tiempo de indicadores económicos (desempleo, IPC, etc)
- Reformar el método de subida de datos nuevos  y su autentificación
- Replicar el paquete dataine en Python

:::



#

[]{.linea-superior} 
[]{.linea-inferior} 

<img src="imagenes/logo_portada2.png" width="20%"/>  


[**Proyecto Ciencia de Datos**]{.big-par .center-justified}

[**Proyecto: Modelo y API predicción de delitos**]{.big-par .center-justified}

[**Enero 2024**]{.big-par .center-justified}


