---
# title: "Modelo y API predicción de delitos"
# author: "Enero 2024"
format:
  revealjs:
    auto-stretch: false
    margin: 0
    slide-number: true
    scrollable: true
    preview-links: auto
    page-layout: custom
    logo: imagenes/logo_portada2.png
    css: ine_quarto_styles.css
    # footer: <https://quarto.org>
engine: knitr
---

#

<!---
# TODO: this does not work
 .linea-superior[]
.linea-inferior[] 
--->

<!---
# TODO: this does not work
 ![](imagenes/logo_portada2.png){.center style="width: 20%;"}   
--->

[]{.linea-superior} 
[]{.linea-inferior} 


<!---
 <img src="imagenes/logo_portada2.png" style="width: 20%"/>  
--->

[<img src="imagenes/logo_portada2.png" width="20%"/> ]{.center-justified}


[**API de clasificación de delitos y uso de NLP en el control de calidad**]{.big-par .center-justified}
[**Proyecto Ciencia de Datos**]{.big-par .center-justified}
[**Encuesta Nacional Urbana de Seguridad Ciudadana**]{.medium-par .center-justified}

[**Abril 2024**]{.big-par .center-justified}





## Contenidos

:::{.incremental .big-par}
1. Problemática 🔎
2. Modelamiento 🛠
    - Descripción
    - Métricas
3. API modelo delitos 🤖
4. Uso de la API en el browser 💻 

:::


## Problemática (1/2)


::: {.incremental .medium-par}

- La Encuesta Nacional Urbana de Seguridad Ciudadana (*ENUSC*) tiene como objetivo obtener información acerca de la victimización, percepción de inseguridad y reacción frente al delito de hogares y personas a nivel nacional y regional, en zonas urbanas del país.

- La ENUSC posee un módulo de *victimización*, el cual consta de dos fases:

  1. ***Screening***; se identifican todos los delitos ocurridos, tanto los intentos como los consumados.
  
  2. ***Caracterización***; se pregunta por las características del último evento mencionado para el tipo de delito declarado. 

- Para algunos delitos específicos, se solicitará el relato que describa la situación.
    
- Cada uno de estos relatos pasan por un proceso de revisión para identificar si efectivamente el delito fue consumado y correctamente clasificado.

:::


## Problemática (2/2)

::: {.incremental .medium-par}

- En cada versión de la ENUSC, en promedio, se debe clasificar y validar al rededor de **10500** relatos de delitos. 

- Este proceso de revisión actualmente se realiza "manualmente", en donde el equipo ENUSC clasifican aproximadamente **500** relatos diarios. 

- Dada esta situación, se creó un modelo de clasificación que asigna un delito a cada relato entregado. Lo cual permite ayudar al equipo ENUSC en está revisión. 


:::

## Modelamiento | Descripción (1/3)

. . .

::: {.medium-par}

- Para este modelo de clasificación, se utilizaron 15 tipos de delitos disponibles, los cuales se ditribuyen de la siguiente forma:

  ```{r tabla, echo = FALSE, warning=FALSE, message=FALSE}
  
  library(readr)
  library(dplyr)
  library(kableExtra)
  library(readxl)
  
  metricas_test_mod15clas <- read_excel("data/metricas_modelo_15clases_V4.xlsx")
  metricas_test_mod16clas <- read_excel("data/metricas_modelo_16clases_V3.xlsx")
  load('data/tabla_n_del.RData')
  
  aux = tabla %>%
    mutate(Proporción = Cantidad*100/sum(Cantidad)) %>% 
    mutate(Proporción = paste0(as.character(round(Proporción, digits = 2)), '%')) %>% 
    select(-Cantidad)
  
  ```
:::

. . .

:::: {layout-ncol=2}

:::{.fragment .medium-par .center} 

```{r echo = FALSE, warning=FALSE, message=FALSE}
aux %>% 
  filter(Delito != 'NO_CLASIFICABLE') %>% 
  slice(c(1:8)) %>% 
  kbl()
  
```

:::

:::{.fragment .medium-par  .center} 

```{r echo = FALSE, warning=FALSE, message=FALSE}
aux %>% 
  slice(c(10:17, 2)) %>% 
  kbl() %>% 
  row_spec(8,
           background = 'lightyellow1')
  
```


:::

::::
  
. . .

:::{.medium-par .incremental}
  
- Adicionalmente, se creó la categoría *NO_CLASIFICABLE*, que incluye la existencia de relatos cortos no informativos, la cual representa un `r aux %>% filter(Delito == 'NO_CLASIFICABLE') %>% pull(Proporción)` del total

:::

<br>

## Modelamiento | Descripción (2/3)

::: {.incremental .medium-par}

- Puesto que tenemos pocas observaciones en nuestra nueva categoría, se ajustaron dos modelos:

  - *Modelo con 15 variables*: Solo delitos 
  
  - *Modelo con 16 variables*: Delitos + categoría no clasificable.


<br>

- Se realizó un modelo con redes neuronales usando una capa de embeddings y LSTM. 

    - Esto nos permite captar la semántica de los relatos y procesar la característica base secuencial que posee nuestro lenguaje.

- Los embeddings utilizados corresponden a los creados por Jorge Pérez con *FastText*. Estos poseen 1313423 vectores con una dimensión de 300.

- Estos se encuentran disponibles en su repositorio de github [github.com/dccuchile/spanish-word-embeddings](https://github.com/dccuchile/spanish-word-embeddings).


:::

## Modelamiento | Descripción (3/3)

Flujo modelo:

:::{.medium-par .incremental}
- Paso 1: Separación train-test del 80%-20%

- Paso 2: Limpieza de caracteres.

- Paso 3: Tokenización, obtención del vocabulario disponible y proceso de padding.

- Paso 4: Creación de matriz de embeddings en base a nuestro vocabulario del set de entrenamiento.

- Paso 5: Ajuste modelo con redes neuronales.

:::

## Modelamiento | Métricas (1/2)

Métricas modelo con **15 clases** en set de testeo:


**Accuracy** = `r round(metricas_test_mod15clas$support[16], digits = 3)`

::: {.medium-par}
```{r m_mod15, echo = FALSE}

metricas_test_mod15clas %>% 
  mutate(`f1-score` = round(`f1-score`, digits = 3), 
          support= round(support)) %>% 
  select(Clases, `f1-score` , support) %>% 
  head(15) %>%
  kbl()


```

:::

$$ $$



## Modelamiento | Métricas (2/2)

Métricas modelo con **16 clases** en set de testeo: 

**Accuracy** = `r round(metricas_test_mod16clas$support[17], digits = 3)`

::: {.medium-par}

```{r m_mod16, echo =FALSE}

metricas_test_mod16clas %>% 
  mutate(`f1-score` = round(`f1-score`, digits = 3), 
          support= round(support)) %>% 
  select(Clases, `f1-score` , support) %>% 
  head(16) %>% 
  kbl()

```

:::

$$ $$

# API modelo delitos 


## API modelo delitos | Estructura

![](imagenes/diagrama.png)

## API modelo delitos | Ventajas FastAPI {.medium-par}

::: incremental

- Es uno de los frameworks más rápidos que existen, a la altura de Go y NodeJS.
- Es fácil de usar, aumentando la velocidad de desarrollo.
- Aprovecha el desarrollo de otras librerías y estándares como Starlette, Flask, 
OpenAPI y Pydantic, lo que aporta con robustez en los sistemas.
- Aprovecha Python moderno, utilizando type hints, funciones asíncronas, etc.
- Genera automáticamente documentación interactiva con SwaggerUI.

:::

## API modelo delitos | Ventajas FastAPI {.medium-par}

::: {.r-stack}

![](imagenes/codigo_api.png){.fragment}

![](imagenes/docs_api.png){.fragment}

:::


::: notes

Starlette: framework/toolkit ASGI lightweight

Pydantic: librería de validación de datosque permite usar type hints para validar y serializar esquemas de datos

:::



## API modelo delitos | Uso y motivación

:::{.incremental .medium-par}
- Esta API permite abstraer la clasificación de delitos de la programación, facilitando el acceso
a cualquier persona usuaria que siga el manual de uso.

- La API tiene un objetivo principal y dos secundarios:

  - Permitir, de manera sencilla, la predicción de categorías de delito, en base a los modelos
  _Deep Learning_ que fueron desarrollados.
  - Entregar acceso restringido a los datos de entrenamiento de los modelos.
  - Entregar métricas de calidad de predicción de los modelos.
  

:::

## La API 

:::{.incremental .medium-par}

La API está compuesta por 3 _endpoints_ principales y  2 _endpoints_ asociados a la autentificación

  - Un _endpoint_ es una ruta dentro de la API que tiene asignada una tarea específica
  


1. `/predecir`: Se ingresa lista con glosas de delitos a predecir y un parámetro `tipo_modelo` que puede tomar valores `modelo_15_clases` o `modelo_16_clases` y devuelve un `.json` con dos llaves por cada glosa: `probabilidades` y `predicciones`.

    - La primera contiene las probabilidades calculadas asociadas a cada delito, junto con el nombre del delito.
    - La segunda contiene el nombre del delito que tuvo la probabilidad más alta calculada por el modelo seleccionado. Esta se devuelve en formato `.json`


:::




## La API 

Resultado:

<img src="imagenes/output_get_data.png" width="35%" />

## La API {.medium-par}

2. `/get_training_data`: retorna los datos de entrenamiento del modelo, en un `.json` con 4 llaves: `X_test`,
`X_train`, `y_test`, `y_train`.

    - OJO: el uso de este endpoint requiere [autentificación]{.red}. Veremos en la demostración cómo autentificar.
    
    - No mostraremos el resultado, ya que son datos confidenciales.
    
3. `/get_model_metrics`: Entrega _precision, recall, f1-score_ y _support_ para cada una de las clases, para un modelo específico. El parámetro `tipo_modelo` vuelve a definir qué modelo se selecciona.

## La API {.medium-par}

Resultado:

[{
  "data": "[{\"Delito\":\"AMENAZA\",\"precision\":0.9485094851,\"recall\":0.9296148738,\"f1-score\":0.9389671362,\"support\":753.0},{\"Delito\":\"CIBER_ACOSO\",\"precision\":0.9566787004,\"recall\":0.9330985915,\"f1-score\":0.944741533,\"support\":284.0},{\"Delito\":\"CIBER_DESTRUC\",\"precision\":1.0,\"recall\":0.1428571429,\"f1-score\":0.25,\"support\":7.0},{\"Delito\":\"CIBER_HACKEO\",\"precision\":0.8770226537,\"recall\":0.9575971731,\"f1-score\":0.9155405405,\"support\":283.0},{\"Delito\":\"ESTAFA\",\"precision\":0.9483394834,\"recall\":0.9345454545,\"f1-score\":0.9413919414,\"support\":825.0},{\"Delito\":\"FRAUDE\",\"precision\":0.9399141631,\"recall\":0.9591240876,\"f1-score\":0.9494219653,\"support\":685.0},{\"Delito\":\"HURTO\",\"precision\":0.8653169014,\"recall\":0.8615249781,\"f1-score\":0.8634167765,\"support\":1141.0},{\"Delito\":\"LESIONES\",\"precision\":0.896373057,\"recall\":0.8737373737,\"f1-score\":0.8849104859,\"support\":198.0},{\"Delito\":\"ROBO_DESDE_VEHIC\",\"precision\":0.9134355275,\"recall\":0.946728972,\"f1-score\":0.9297843047,\"support\":1070.0},{\"Delito\":\"ROBO_SORPRESA\",\"precision\":0.8620689655,\"recall\":0.8095238095,\"f1-score\":0.8349705305,\"support\":525.0},{\"Delito\":\"ROBO_VEHIC\",\"precision\":0.8888888889,\"recall\":0.6746987952,\"f1-score\":0.7671232877,\"support\":83.0},{\"Delito\":\"ROBO_VIOLENCIA\",\"precision\":0.9165275459,\"recall\":0.9089403974,\"f1-score\":0.9127182045,\"support\":604.0},{\"Delito\":\"ROBO_VIVIENDA\",\"precision\":0.857712766,\"recall\":0.9201141227,\"f1-score\":0.887818307,\"support\":701.0},{\"Delito\":\"VANDAL_VEHIC\",\"precision\":0.9362831858,\"recall\":0.8950930626,\"f1-score\":0.9152249135,\"support\":591.0},{\"Delito\":\"VANDAL_VIV\",\"precision\":0.9409836066,\"recall\":0.9456342669,\"f1-score\":0.9433032046,\"support\":607.0},{\"Delito\":\"accuracy\",\"precision\":0.910853177,\"recall\":0.910853177,\"f1-score\":0.910853177,\"support\":0.910853177},{\"Delito\":\"macro avg\",\"precision\":0.9165369953,\"recall\":0.8461888734,\"f1-score\":0.8586222087,\"support\":8357.0},{\"Delito\":\"weighted avg\",\"precision\":0.9112422194,\"recall\":0.910853177,\"f1-score\":0.9103261222,\"support\":8357.0}]"
}]{.small-par}

## La API {.medium-par}

4. `/login`: permite a una persona usuaria autentificarse en la API. Actualmente, este _endpoint_ es solo útil para 
superusuarios que quieran crear un usuario nuevo con o sin privilegios de superusuario.

5. `/register`: permite crear usuarios nuevos a un superusuario autentificado. Los usuarios creados podrán tener privilegios
de superusuario si quien los crea así lo desea.
  - Si el usuario ya existía se reemplazará su contraseña.


## Uso de la API en el browser

Al entrar a la URL, se nos envía directamente a la documentación, que, junto con explicar cada _endpoint_,
nos permite probarlos.

[Probemos la api!](http://10.90.2.47:3123/)


## En resumen

:::{.incremental .big-par}

- La API permite predecir delitos de manera sencilla ayudando al equipo ENUSC en el proceso de revisión de relatos
    - De manera "didáctica" en la documentación y de manera programática.
- Cuenta con autentificación para resguardar datos de carácter privado.
- Además, permite acceder a métricas del modelo y los datos de entrenamiento de este.

:::





#

[]{.linea-superior} 
[]{.linea-inferior} 

<img src="imagenes/logo_portada2.png" width="20%"/>  



[**API de clasificación de delitos y uso de NLP en el control de calidad**]{.big-par .center-justified}
[**Proyecto Ciencia de Datos**]{.big-par .center-justified}
[**Encuesta Nacional Urbana de Seguridad Ciudadana**]{.medium-par .center-justified}

[**Abril 2024**]{.big-par .center-justified}

